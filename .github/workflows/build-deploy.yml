name: CI Pipeline

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:

  analyze:
    name: Analyze
    runs-on: ubuntu-latest
  
    permissions:
      actions: read
      contents: read
      security-events: write

    env:
      ADMIN: ${{secrets.ADMIN}}
      ALGO: ${{secrets.ALGO}}
      DBHOST: ${{secrets.DBHOST}}
      DBNAME: ${{secrets.DBNAME}}
      DBNAME_TEST: ${{secrets.DBNAME_TEST}}
      DBPASS: ${{secrets.DBPASS}}
      DBPORT: ${{secrets.DBPORT}}
      DBTYPE: ${{secrets.DBTYPE}}
      DBUSER: ${{secrets.DBUSER}}
      EMAIL: ${{secrets.EMAIL}}
      EMAIL_SERVER: ${{secrets.EMAIL_SERVER}}
      EMAIL_SERVER_LEY: $${{secrets.EMAIL_SERVER_KEY}}
      EXPIRE: $${{secrets.EXPIRE}}
      KEY: ${{secrets.KEY}}
      ROLE: ${{secrets.ROLE}}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10.5'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ];
          then pip install -r requirements.txt;
          fi
          # Set the `CODEQL-PYTHON` environment variable to the Python executable
          # that includes the dependencies
          echo "CODEQL_PYTHON=$(which python)" >> $GITHUB_ENV

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v2
        with:
          languages: python
          # Override the default behavior so that the action doesn't attempt
          # to auto-install Python dependencies
          setup-python-dependencies: false

      - name: CodeQL Analysis
        uses: github/codeql-action/analyze@v2

      - name: TruffleHog OSS Scan
        uses: trufflesecurity/trufflehog@v3.4.3
        with:
          path: ./
          base: ${{ github.event.repository.default_branch }}
          head: HEAD

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  test:
    runs-on: ubuntu-latest
    needs: [analyze]
    strategy:
      matrix:
        python-version: ["3.10"]
    env:
      ADMIN: ${{secrets.ADMIN}}
      ALGO: ${{secrets.ALGO}}
      DBHOST: ${{secrets.DBHOST}}
      DBNAME: ${{secrets.DBNAME}}
      DBNAME_TEST: ${{secrets.DBNAME_TEST}}
      DBPASS: ${{secrets.DBPASS}}
      DBPORT: ${{secrets.DBPORT}}
      DBTYPE: ${{secrets.DBTYPE}}
      DBUSER: ${{secrets.DBUSER}}
      EMAIL: ${{secrets.EMAIL}}
      EMAIL_SERVER: ${{secrets.EMAIL_SERVER}}
      EMAIL_SERVER_LEY: $${{secrets.EMAIL_SERVER_KEY}}
      EXPIRE: $${{secrets.EXPIRE}}
      KEY: ${{secrets.KEY}}
      ROLE: ${{secrets.ROLE}}

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Test with pytest
        run: |
          pytest -s -v

      - name: Pytest coverage comment
        uses: MishaKav/pytest-coverage-comment@main
        with:
          pytest-coverage-path: ./pytest-coverage.txt
          junitxml-path: ./pytest.xml

  build:
    runs-on: ubuntu-latest
    steps:
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Build and push
        uses: docker/build-push-action@v3
        with:
          push: true
          tags: user/app:latest